#!/bin/bash
# corekeeper-bootstrap is the first of the corekeeper-* scripts
# that runs and prepares the system based on
# environment variables.

# Include defaults
. /usr/local/etc/corekeeper/defaults
. /usr/local/etc/corekeeper/common


# Update server status before anything else
update_server_status bootstrapping


if [ -n "$PRE_BOOTSTRAP_HOOK" ]; then
    info "Running pre bootstrap hook: $PRE_BOOTSTRAP_HOOK"
    eval "$PRE_BOOTSTRAP_HOOK"
fi


# check if we are supposed to wipe our data directories
if [ "$DEBUG_START_FRESH" = true ]; then
    warn "Wiping all data directories (DEBUG_START_FRESH: $DEBUG_START_FRESH)"
    rm -rf "/opt/corekeeper/*"
fi

# Output image commit version on startup
if [ -f "$git_commit_file" ]; then
    commit=$(< "$git_commit_file")
    debug "Running commit $commit"
fi


# Create paths
mkdir -p "$corekeeper_download_path"
mkdir -p "$corekeeper_install_path"

# Write server's adminlist.txt / bannedlist / permittedlist.txt
write_adminlist
write_bannedlist
write_permittedlist

# Create crontabs
crontab=$(mktemp)
if [ "$BACKUPS" = true ] && [ -n "$BACKUPS_CRON" ] && [ "$BACKUPS_INTERVAL" = "315360000" ]; then
    debug "Creating cron to do world backups using schedule $BACKUPS_CRON"
    echo "$BACKUPS_CRON [ -f \"$corekeeper_backup_pidfile\" ] && kill -HUP \$(cat $corekeeper_backup_pidfile)" >> "$crontab"
fi

if [ -n "$UPDATE_CRON" ] && [ "$UPDATE_INTERVAL" = "315360000" ]; then
    debug "Creating cron to check for updates using schedule $UPDATE_CRON"
    echo "$UPDATE_CRON [ -f \"$corekeeper_updater_pidfile\" ] && kill -HUP \$(cat $corekeeper_updater_pidfile)" >> "$crontab"
fi

if [ -n "$RESTART_CRON" ]; then
    debug "Creating cron to restart corekeeper-server using schedule $RESTART_CRON"
    if [ "$RESTART_IF_IDLE" = true ]; then
        echo "$RESTART_CRON $cmd_corekeeper_is_idle && $cmd_supervisorctl restart corekeeper-server" >> "$crontab"
    else
        echo "$RESTART_CRON $cmd_supervisorctl restart corekeeper-server" >> "$crontab"
    fi
else
    debug "Environment variable RESTART_CRON is empty - no automatic corekeeper-server restart scheduled"
fi
crontab "$crontab"
rm -f "$crontab"


# Notify users of new data paths
if [ -d "/opt/corekeeper_dl" ] || [ -f "/opt/corekeeper/_launch.sh" ]; then
    cat <<EOF
!!! ATTENTION !!!

You have /opt/corekeeper_dl mounted or old server files in /opt/corekeeper.

The /opt/corekeeper_dl volume is no longer required and has been unified under
    /opt/corekeeper

Directories have been moved in the following way:
    /opt/corekeeper/    -> /opt/corekeeper/server/
    /opt/corekeeper_dl/ -> /opt/corekeeper/dl/server/

You might want to (re)move existing files or create a fresh volume mount under /opt/corekeeper to clean things up.

Nothing is going to break though if you don't. It will just consume some extra disk space.
If required we'll download a fresh copy of the server in the new directory structure.

!!! ATTENTION !!!
EOF
fi


if [ -n "$POST_BOOTSTRAP_HOOK" ]; then
    info "Running post bootstrap hook: $POST_BOOTSTRAP_HOOK"
    eval "$POST_BOOTSTRAP_HOOK"
fi


# Start all services
supervisorctl start corekeeper-updater
supervisorctl start corekeeper-backup

exit 0
